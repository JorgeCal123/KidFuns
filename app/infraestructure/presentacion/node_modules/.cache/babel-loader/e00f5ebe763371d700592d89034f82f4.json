{"ast":null,"code":"var _jsxFileName = \"/home/jhonpuli/KidFuns/app/infraestructure/presentacion/src/page/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Logo } from \"../Logo\";\nimport { Formulario, ContenedorBotonCentrado, Boton, MensajeExito, MensajeError } from './elementos/Formularios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport Input from '../componentes/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [country, cambiarCountry] = useState({\n    campo: '',\n    valido: null\n  });\n  const [name, cambiarName] = useState({\n    campo: '',\n    valido: null\n  });\n  const [email, cambiarEmail] = useState({\n    campo: '',\n    valido: null\n  });\n  const [formularioValido, cambiarFormularioValido] = useState(null);\n  const [password, cambiarPassword] = useState({\n    campo: '',\n    valido: null\n  });\n  const [password2, cambiarPassword2] = useState({\n    campo: '',\n    valido: null\n  });\n  const expresiones = {\n    country: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/,\n    // Letras, numeros, guion y guion_bajo\n    name: /^[a-zA-ZÀ-ÿ\\s]{2,40}$/,\n    // Letras y espacios, pueden llevar acentos.\n    email: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n    password: /^.{4,12}$/ // 4 a 12 digitos.\n\n  };\n\n  const validarPassword2 = () => {\n    if (password.campo.length > 0) {\n      if (password.campo !== password2.campo) {\n        cambiarPassword2(prevState => {\n          return { ...prevState,\n            valido: 'false'\n          };\n        });\n      } else {\n        cambiarPassword2(prevState => {\n          return { ...prevState,\n            valido: 'true'\n          };\n        });\n      }\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (country.valido === 'true' && name.valido === 'true' && email.valido === 'true' && password.valido === 'true' && password2.valido === 'true') {\n      cambiarFormularioValido(true);\n      cambiarCountry({\n        campo: '',\n        valido: ''\n      });\n      cambiarName({\n        campo: '',\n        valido: null\n      });\n      cambiarEmail({\n        campo: '',\n        valido: null\n      });\n      cambiarPassword({\n        campo: '',\n        valido: null\n      });\n      cambiarPassword2({\n        campo: '',\n        valido: null\n      }); // envio de datos\n\n      console.log('hola');\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          country: country['campo'],\n          name: name['campo'],\n          email: email['campo'],\n          password: password['campo']\n        })\n      };\n      fetch('http://127.0.0.1:8000/user/', requestOptions).then(response => response.json()).then(data => console.log('repuesta', data));\n    } else {\n      cambiarFormularioValido(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formulario, {\n      action: \"\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        estado: country,\n        cambiarEstado: cambiarCountry,\n        tipo: \"text\",\n        label: \"country\",\n        placeholder: \"colombia\",\n        name: \"country\",\n        leyendaError: \"El country tiene que ser de 4 a 16 d\\xEDgitos y solo puede contener numeros, letras y guion bajo.\",\n        expresionRegular: expresiones.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        estado: name,\n        cambiarEstado: cambiarName,\n        tipo: \"text\",\n        label: \"Nombre\",\n        placeholder: \"John Doe\",\n        name: \"country\",\n        leyendaError: \"El name solo puede contener letras y espacios.\",\n        expresionRegular: expresiones.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        estado: email,\n        cambiarEstado: cambiarEmail,\n        tipo: \"email\",\n        label: \"Correo Electr\\xF3nico\",\n        placeholder: \"john@email.com\",\n        name: \"email\",\n        leyendaError: \"El email solo puede contener letras, numeros, puntos, guiones y guion bajo.\",\n        expresionRegular: expresiones.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        estado: password,\n        cambiarEstado: cambiarPassword,\n        tipo: \"password\",\n        label: \"password\",\n        name: \"password\",\n        leyendaError: \" el password debe teber 4 a 12 digitos.\",\n        expresionRegular: expresiones.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        estado: password2,\n        cambiarEstado: cambiarPassword2,\n        tipo: \"password\",\n        label: \"password2\",\n        name: \"password2\",\n        funcion: validarPassword2,\n        leyendaError: \"el password debe ser igual.\",\n        expresionRegular: expresiones.password2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), formularioValido === false && /*#__PURE__*/_jsxDEV(MensajeError, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faExclamationTriangle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Error:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), \" Por favor rellena el formulario correctamente.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(ContenedorBotonCentrado, {\n        children: [/*#__PURE__*/_jsxDEV(Boton, {\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), formularioValido === true && /*#__PURE__*/_jsxDEV(MensajeExito, {\n          children: \"Formulario enviado exitosamente!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"5IoMaotCEMZwlqj4055zJBn8Mbo=\");\n\n_c = Register;\nexport { Register };\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Logo","Formulario","ContenedorBotonCentrado","Boton","MensajeExito","MensajeError","FontAwesomeIcon","faExclamationTriangle","Input","Register","country","cambiarCountry","campo","valido","name","cambiarName","email","cambiarEmail","formularioValido","cambiarFormularioValido","password","cambiarPassword","password2","cambiarPassword2","expresiones","validarPassword2","length","prevState","onSubmit","e","preventDefault","console","log","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data"],"sources":["/home/jhonpuli/KidFuns/app/infraestructure/presentacion/src/page/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Logo } from \"../Logo\"\nimport { Formulario, ContenedorBotonCentrado, Boton, MensajeExito, MensajeError } from './elementos/Formularios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport Input from '../componentes/Input';\n\nconst Register = () => {\n  const [country, cambiarCountry] = useState({ campo: '', valido: null });\n  const [name, cambiarName] = useState({ campo: '', valido: null });\n  const [email, cambiarEmail] = useState({ campo: '', valido: null });\n  const [formularioValido, cambiarFormularioValido] = useState(null);\n  const [password, cambiarPassword] = useState({ campo: '', valido: null });\n  const [password2, cambiarPassword2] = useState({ campo: '', valido: null });\n  const expresiones = {\n    country: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/, // Letras, numeros, guion y guion_bajo\n    name: /^[a-zA-ZÀ-ÿ\\s]{2,40}$/, // Letras y espacios, pueden llevar acentos.\n    email: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n    password: /^.{4,12}$/, // 4 a 12 digitos.\n  }\n  const validarPassword2 = () => {\n    if (password.campo.length > 0) {\n      if (password.campo !== password2.campo) {\n        cambiarPassword2((prevState) => {\n          return { ...prevState, valido: 'false' }\n        });\n      } else {\n        cambiarPassword2((prevState) => {\n          return { ...prevState, valido: 'true' }\n        });\n      }\n    }\n  }\n  \n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (\n      country.valido === 'true' &&\n      name.valido === 'true' &&\n      email.valido === 'true' &&\n      password.valido === 'true' &&\n      password2.valido === 'true'\n    ) {\n      cambiarFormularioValido(true);\n      cambiarCountry({ campo: '', valido: '' });\n      cambiarName({ campo: '', valido: null });\n      cambiarEmail({ campo: '', valido: null });\n      cambiarPassword({ campo: '', valido: null });\n      cambiarPassword2({ campo: '', valido: null });\n\n      // envio de datos\n      console.log('hola')\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          country: country['campo'],\n          name:  name['campo'],\n          email: email['campo'],\n          password: password['campo'],\n      })\n    };\n    fetch('http://127.0.0.1:8000/user/', requestOptions)\n        .then(response => response.json())\n        .then(data => console.log('repuesta', data));\n\n    } else {\n      cambiarFormularioValido(false);\n    }\n  }\n\n  return (\n    <main>\n      <Logo />\n      <Formulario action=\"\" onSubmit={onSubmit}>\n        <Input\n          estado={country}\n          cambiarEstado={cambiarCountry}\n          tipo=\"text\"\n          label=\"country\"\n          placeholder=\"colombia\"\n          name=\"country\"\n          leyendaError=\"El country tiene que ser de 4 a 16 dígitos y solo puede contener numeros, letras y guion bajo.\"\n          expresionRegular={expresiones.country}\n        />\n        <Input\n          estado={name}\n          cambiarEstado={cambiarName}\n          tipo=\"text\"\n          label=\"Nombre\"\n          placeholder=\"John Doe\"\n          name=\"country\"\n          leyendaError=\"El name solo puede contener letras y espacios.\"\n          expresionRegular={expresiones.name}\n        />       \n        <Input\n          estado={email}\n          cambiarEstado={cambiarEmail}\n          tipo=\"email\"\n          label=\"Correo Electrónico\"\n          placeholder=\"john@email.com\"\n          name=\"email\"\n          leyendaError=\"El email solo puede contener letras, numeros, puntos, guiones y guion bajo.\"\n          expresionRegular={expresiones.email}\n        />\n        <Input\n          estado={password}\n          cambiarEstado={cambiarPassword}\n          tipo=\"password\"\n          label=\"password\"\n          name=\"password\"\n          leyendaError=\" el password debe teber 4 a 12 digitos.\"\n          expresionRegular={expresiones.password}\n        />\n        <Input\n          estado={password2}\n          cambiarEstado={cambiarPassword2}\n          tipo=\"password\"\n          label=\"password2\"\n          name=\"password2\"\n          funcion={validarPassword2}\n          leyendaError=\"el password debe ser igual.\"\n          expresionRegular={expresiones.password2}\n        />\n        {formularioValido === false && <MensajeError>\n          <p>\n            <FontAwesomeIcon icon={faExclamationTriangle} />\n            <b>Error:</b> Por favor rellena el formulario correctamente.\n          </p>\n        </MensajeError>}\n        <ContenedorBotonCentrado>\n          <Boton type=\"submit\">Enviar</Boton>\n          {formularioValido === true && <MensajeExito>Formulario enviado exitosamente!</MensajeExito>}\n        </ContenedorBotonCentrado>\n      </Formulario>\n    </main>\n  );\n}\n\nexport { Register };"],"mappings":"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"},"metadata":{},"sourceType":"module"}